Sparlab User Guide


Version: 1.0.6


Application:
- Observe simulated scenarios
- See if certain combos are possible
- Create bot to train against
- Invent signature combos
- Mimic optimized findings with your own controller.

Features:

Virtual Joystick (VJ1, VJ2):
-installable driver to your PC.
-Steam compatible.
-2 are built in for simulating player 1 and 2

Physical Joystick (PJ1):
-The device you personally use
-You can use an Arcade Stick, XBOX Controller, or Keyboard.

Action Editor:
-Home for all of your Actions.
-Each action can have a notation and string.

VJ1/VJ2 Script:
-converts notation to its matching string of functions upon simulation.

Simulations:
-Notation can be simulated in both scripts by looping it (runs until Stop is pressed) or
by playing it once.

VJ1/VJ2 Log:
-Notation from script(s) that is converted to input is output in String or Raw format. (See Action Editor below)

PJ1 Log:
-Output from your own controller that is converted to String or Raw format.


Installation:

1) Go inside driver folder and look for 5 files: 'devcon', 'scpvbus', 'ScpVBus', 'ScpVBus.sys', and 'WdfCoinstaller01009.dll'.
	Once you see this, right-click the name of the folder in the folder title bar above the files. Select 'Copy address'

2) In your Windows Search Bar at the bottom of your screen, type in 'cmd' and right click on 'Command Prompt', select 'Run as Administrator', press 'Yes'

3) In the command prompt window, type in 'cd' (not including the quotations), press SPACEBAR, paste the address text, then press ENTER. (cd C:\Users\YOUR NAME\Desktop\Sparlab\driver)

4) To install the driver: type 'devcon.exe install ScpVBus.inf Root\ScpVBus' and press ENTER
	- Your command prompt should output something like this: 'Device node created. Install is complete when drivers are installed...' and 'Drivers installed successfully.'
   To uninstall: type 'devcon.exe remove Root\ScpVBus' and press ENTER.
	- Your command prompt should say something along the lines of '1 device(s) were removed.'


'Virtual Joystick Configuration:


1) Launch the Sparlab app, then go to > Steam Client > Big Picture Mode > Settings > Controller Settings

2) When you turn your vjoy on, you should see a popup showing that a new device has been found. Go through that setup.

3) Make sure your VJoy is mapped with the bindings in your game's settings. You can use the VJoy's Hotkeys (HK details listed under Action Editor) to achieve that.


Physical Joystick Configuration:


Your keyboard is the default PJoy Device when you launch Sparlab for the first time.

If you want to switch to an XBOX joystick, follow these steps:

1) Make sure your XBOX device is plugged into a USB port on your PC.
2) In Settings (inside 'Edit' menu), change 'physical joy type' to 'xbox', press 'Commit'.
3) After committing any changes, try using your joystick and check the Log for output.
4) You can go into Settings and scroll down to 'button configs' to realign buttons. (See 'button configs' below for more details)

If you want to switch to an Arcade Stick, follow these steps:

1) Make sure your Arcade Stick is plugged into a USB port on your PC, then verify its listing in your Device Report.
2) If it is listed, scroll down to see the 'Input Caps', make sure it has the usages 'Hat switch' and 'Button'. If so, keep the Report open and go to Settings, scroll down to 'arcade stick'
    under 'button configs' and change the values of 'vendor id', 'hat switch' and 'buttons' to the corresponding values listed in your report, you can change the values of the
3) In Settings, change 'physical joy type' to 'arcade stick', press 'Commit', then restart the app.
4) After reopening the app, test the buttons on your device and look for output in your 'Out' feed. The 'View Raw Output' button will tell you the value of
    each button and whether it is pressed or released, you can use this information to re-align any buttons inside of 'hat switch' and/or 'buttons'.

If you wish to not use any PJoy device, you can set it to 'None'.


See Troubleshooting at the bottom of this guide if you are having any issues.


'Settings:


Below are descriptions for each settings:

'Action Files: These APPDATA files are where your actions are imported from.
'default direction: Can be 'R' or 'L'.
'physical joy type: Can be 'arcade stick', 'xbox', 'keyboard', or 'None'.
'Delay Variables: These are for inserting into your script/action strings to simulate delay.
'analog configs: 'x fix' & 'y fix' are the configs used by your vjoy. 'x min','x max','y min', & 'y max' are used by your pjoy in order to categorize its analog states.
'button configs: Mapping of buttons to ('press function', 'release function'). Arcade Stick Only: Must have valid vendor ID. All buttons have a valid page ID, each button must have a valid usage ID. \
Hat switch must have one valid usage id. You can find this information by viewing your Device Report (In Help) ,

Action Editor:

-filename: name of the text file inside your Appdata folder
-include: can be True or False. Setting this to True gives you the ability to use the action config's defined notations.
-action config: This is where the app pulls from when you use hotkeys or play notation scripts. Each tab in the editor represents a file you have listed in your 'Action Files' in Settings.

Each action has its own Name (e.g. 'double dash'), Notation (e.g. 'dd'), Hotkey (e.g. 'd+-'), and string (e.g. ['la_r', 'delay(0.015)', 'la_n', 'delay(0.015)', 'la_r', 'delay(0.015)', 'la_n'])

Examples of correctly formatted actions:

'right punch:			{'Notation': '2', 'String': ['y_d', 'delay(0.020)', 'y_u']},
'start:			{'Notation': 'None', 'String': ['start_d', 'delay(0.020)', 'start_u']}


Functions for building strings:

la_ur : left analog up right
la_r : left analog right
la_dr : left analog down right
la_d : left analog down
la_dl : left analog down left
la_l : left analog left
la_ul : left analog up left
la_u : left analog up
la_n : left analog neutral

ra_ur : right analog up right
ra_r : right analog right
ra_dr : right analog down right
ra_d : right analog down
ra_dl : right analog down left
ra_l : right analog left
ra_ul : right analog up left
ra_u : right analog up
ra_n : right analog neutral


dpu_u : dpad up release
dpu_d : dpad up press
dpr_u : dpad right release
dpr_d : dpad right press
dpd_u : dpad down release
dpd_d : dpad down press
dpl_u : dpad left release
dpl_d : dpad left press

a_u : a button release
a_d : a button press
b_u : b button release
b_d : b button press
x_u : x button release
x_d : x button press
y_u : y button release
y_d : y button press
ls_u: left stick release
ls_d : left stick press
rs_u: right stick release
rs_d : right stick press
rb_u : rb button release
rb_d : rb button press
rt_u : rt button release
rt_d : rt button press
lb_u : lb button release
lb_d : lb button press
lt_u : lt button release
lt_d : lt button press
start_u : start button release
start_d : start button press
back_u : back button release
back_d : back button press

'delay(t)': Hold for t seconds ('delay(1.123)' means delay for 1.123 seconds, 'delay(dv1)' means delay for 1 second IF dv1 = 0.1000 seconds)

Notation:

A notation is a variable representing an Action you want to be played in your VJ1/VJ2 script(s), which means that the Action being represented MUST have a valid String attached with it.

Syntax Rules: In Action Editor, Notations must be surrounded by quotations (e.g 'd/f', "u/r", '1')


Creating a Script:

Follow these guidelines for successful conversion of notations:
-  Everything must be separated with a SPACE
	Correct: [ d d/r r 3 ]
	Incorrect: [dd/rr3]
- The string of actions you want to execute when you press ‘Play’ must be contained in brackets on the first line of your textbox.
-Correct: [ 1+2 ]
-Incorrect: 1+2
- All notations must be included in actions inside your Action Editor.


Delay Variables:

These are for inserting into your script or strings in your Action Editor to simulate delay time in seconds.

-Example:

	-dv1 = 0.015
	-A notation script of [ 1 dv1 2 ] would be equal to a string of [ *1's String* *delay(0.015)* *2's String* ]
	-A string that looks like ['a_d','delay(dv1)','a_u'] would be equal to a string of ['a_d','delay(0.015)','a_u']

How to use Auto Adjustment

This feature changes a delay variable FOR YOU while your script is playing.

Var.: Variable to adjust during Script Play
Val.: amount of adjustment
Freq.: adjust every N simulations.


In-app commands:

Clear: removes all text in your Log.
View Raw: converts new string output to its raw format.
Disable Log: Disables output display in log.
Delay Variables: these can be inserted into your script to simulate delay (in seconds).
Flip X Axis: switches the directions of all functions that have an X Direction (e.g. 'dpr_d' --> 'dpl_d', 'la_dl' --> 'la_dr').
Turn VJoy On: plugs in your VJoy Device.


Troubleshooting:

Error: '_ is not a valid device type. Change your pjoy type in Settings':
-Your PJoy has to be one of the following: 'xbox', 'arcade stick', 'keyboard', or 'None'. Go into your Settings, change it to one of those, press 'commit'.

Error: "Key '___' is not mapped to any known key.", ValueError(...':

-This error will occur if you are using an invalid key on your keyboard when your keyboard is the assigned physical joy type. The key that is giving you the error is likely not on your keyboard. Go
back into Settings, scroll down to 'button configs/', scroll to 'keyboard' underneath it, change the key to a valid key, press Commit. You may have to reset the app to get the key to work.

Error/Warning: 'invalid syntax(<string>, x...':

-Error/Warning(s) will occur if you leave out a quotation, curly bracket, bracket, colon, or comma. Go to line 'x' and look for the missing item, insert the missing character, then re-commit.
-If quote: make sure it matches to the one on the other side of the phrase before you re-commit.

-Error: 'A device with vendor id "__" could not be found'

-This happens when you have 'arcade stick' as your 'physical joy type' and you are not using a vendor id that is listed in your Device Report. Refer to the Arcade Stick instructions in 'Physical Joystick Configuration' above.

Error: 'No value was found for _'

-This occurs when you have 'arcade stick' set as your PJoy and you forgot to map a button for your device. Refer to the Arcade Stick instructions in 'Physical Joystick Configuration' above.

Error: 'No input report found for page ID "_" (vendor= "_",....'

-This occurs if you have an invalid page ID listed inside your PJoy configurations when using an Arcade Stick. Refer to the Arcade Stick instructions in 'Physical Joystick Configuration' above.


VJoy is not working when turned on: this can occur when there is an update to your OS, which alters the state of the virtual driver. Try uninstalling the driver and re-installing it. If that
doesn't work, you may have to reset your PC and try it.

My XBOX controller input is not being detected, and I have 'xbox' set as the 'physical joystick type': Restart the app.

Blank Action Editor/Settings File: you might have a typo in one of the text files and need to fix it inside your APPDATA Files.
	In your file explorer, go to YOURNAME/AppData/Roaming/Sparlab/*version#*, open up the file that is blank in the app, correct the typo, save the file, and restart the app.

App not loading: you may need to clear your app's memory. To do that, go to YOURNAME/AppData/Roaming/Sparlab, copy (backup) the Sparlab folder to a non-AppData location such as your desktop,
delete the Sparlab folder inside of YOURNAME/AppData/Roaming/, and relaunch the app. If that doesn't work, try restarting your computer. If that doesn't solve the problem, go to www.umensch.com/downloads and install the newest version.
If it is still not loading, post the issue to the Sparlab community (https://www.reddit.com/r/Sparlab/) or the project repository (https://github.com/johnward-umensch/Sparlab), you can also try downloading the newest release
from the releases tab in the github repository.

Getting same error after making correction: this bug will hopefully be fixed in the next version. Until then, restarting the app should solve your problem.


Error/technical issue was not listed in this guide: visit the Sparlab community (https://www.reddit.com/r/Sparlab/) and/or the github repository (https://github.com/johnward-umensch/Sparlab)





















}
